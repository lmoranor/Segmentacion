/*===============================================================================
   PROYECTO DE LIMPIEZA DE DATOS PARA SEGMENTACIÓN DE CLIENTES
   Fuente: Online Retail Dataset
===============================================================================*/

--==============================================================================
-- CREACIÓN DE BASE DE DATOS Y TABLA TEMPORAL
--==============================================================================

CREATE DATABASE IF NOT EXISTS segmentacion;
USE segmentacion;

-- Crear tabla temporal para importar datos sin procesar
CREATE TABLE temp_online_retail (
    InvoiceNo    VARCHAR(50),
    StockCode    VARCHAR(50),
    Description  VARCHAR(255),
    Quantity     VARCHAR(50),
    InvoiceDate  VARCHAR(50),
    UnitPrice    VARCHAR(50),
    CustomerID   VARCHAR(50),
    Country      VARCHAR(100)
);

--==============================================================================
-- CARGA DE DATOS DESDE ARCHIVO CSV
--==============================================================================

LOAD DATA LOCAL INFILE 'C:..../Online_Retail_comma.csv'
INTO TABLE temp_online_retail
FIELDS TERMINATED BY ',' 
ENCLOSED BY '"' 
LINES TERMINATED BY '\n'
IGNORE 1 ROWS;

DESCRIBE temp_online_retail;

--==============================================================================
-- EXPLORACIÓN INICIAL DE LOS DATOS
--==============================================================================

SELECT * FROM temp_online_retail;
SELECT DISTINCT InvoiceNo   FROM temp_online_retail;
SELECT DISTINCT Quantity    FROM temp_online_retail;
SELECT DISTINCT UnitPrice   FROM temp_online_retail;
SELECT DISTINCT CustomerID  FROM temp_online_retail;

-- Ver facturas con cantidades negativas
SELECT InvoiceNo, Quantity
FROM temp_online_retail
WHERE Quantity < 0;

--==============================================================================
-- CREACIÓN DE TABLA LIMPIA PARA MODIFICACIONES
--==============================================================================

-- Crear copia para no alterar los datos originales
CREATE TABLE copia_online_retail LIKE temp_online_retail;

-- Copiar datos a nueva tabla
INSERT INTO copia_online_retail
SELECT * FROM temp_online_retail;

--==============================================================================
-- ELIMINACIÓN DE NOTAS DE CRÉDITO Y SUS FACTURAS
--==============================================================================

-- Identificar y excluir notas de crédito junto a sus facturas asociadas
SELECT *
FROM copia_online_retail
WHERE RIGHT(InvoiceNo, LENGTH(InvoiceNo) - 1) NOT IN (
    SELECT 
        CASE
            WHEN InvoiceNo LIKE 'C%' THEN RIGHT(InvoiceNo, LENGTH(InvoiceNo) - 1)
            ELSE InvoiceNo
        END
    FROM copia_online_retail
    GROUP BY InvoiceNo
    HAVING COUNT(*) > 1
)
AND InvoiceNo NOT LIKE 'C%';

-- Eliminar devoluciones (InvoiceNo con "C") y facturas asociadas
DELETE FROM copia_online_retail
WHERE InvoiceNo IN (
    SELECT InvoiceNo FROM (
        SELECT DISTINCT original.InvoiceNo
        FROM copia_online_retail original
        JOIN copia_online_retail devolucion
            ON devolucion.InvoiceNo = CONCAT('C', original.InvoiceNo)

        UNION

        SELECT DISTINCT InvoiceNo
        FROM copia_online_retail
        WHERE InvoiceNo LIKE 'C%'
    ) AS sub1
);

-- Eliminar notas de crédito huérfanas restantes
DELETE FROM copia_online_retail
WHERE Quantity < 0;

-- Verificar que no quedan notas de crédito ni valores negativos
SELECT * 
FROM copia_online_retail
WHERE InvoiceNo LIKE 'C%' OR Quantity < 0;

--==============================================================================
-- ELIMINACIÓN DE PRECIOS NEGATIVOS
--==============================================================================

SELECT * FROM copia_online_retail
WHERE UnitPrice < 0;

SELECT * FROM copia_online_retail
WHERE InvoiceNo IN ('A563185', 'A563186', 'A563187');

DELETE FROM copia_online_retail
WHERE InvoiceNo IN ('A563185', 'A563186', 'A563187');

--==============================================================================
-- VALIDACIÓN Y LIMPIEZA DE VALORES NULOS / INVÁLIDOS
--==============================================================================

-- CustomerID inválidos
SELECT *
FROM copia_online_retail
WHERE CustomerID IS NULL 
   OR CustomerID = '' 
   OR UPPER(TRIM(CustomerID)) = 'NA';

-- UnitPrice inválidos
SELECT *
FROM copia_online_retail
WHERE UnitPrice IS NULL 
   OR TRIM(UnitPrice) = '' 
   OR UPPER(TRIM(UnitPrice)) = 'NA'
   OR (
       REPLACE(UnitPrice, ',', '.') REGEXP '^[0-9]+(\\.[0-9]+)?$' AND
       CAST(REPLACE(UnitPrice, ',', '.') AS DECIMAL(10,2)) = 0
   );

-- Quantity inválidos
SELECT *
FROM copia_online_retail
WHERE Quantity IS NULL 
   OR TRIM(Quantity) = '' 
   OR UPPER(TRIM(Quantity)) = 'NA'
   OR (
       REPLACE(Quantity, ',', '.') REGEXP '^[0-9]+(\\.[0-9]+)?$' AND
       CAST(REPLACE(Quantity, ',', '.') AS DECIMAL(10,2)) = 0
   );

-- Eliminar registros con CustomerID inválido
DELETE FROM copia_online_retail
WHERE CustomerID IS NULL 
   OR CustomerID = '' 
   OR UPPER(TRIM(CustomerID)) = 'NA';

-- Eliminar registros con UnitPrice inválido
DELETE FROM copia_online_retail
WHERE UnitPrice IS NULL 
   OR TRIM(UnitPrice) = '' 
   OR UPPER(TRIM(UnitPrice)) = 'NA'
   OR (
       REPLACE(UnitPrice, ',', '.') REGEXP '^[0-9]+(\\.[0-9]+)?$' AND
       CAST(REPLACE(UnitPrice, ',', '.') AS DECIMAL(10,2)) = 0
   );

--==============================================================================
-- CONVERSIÓN DE FECHAS
--==============================================================================

-- Crear y actualizar columna con formato de fecha válido
ALTER TABLE copia_online_retail ADD COLUMN InvoiceDateDate DATE;

UPDATE copia_online_retail
SET InvoiceDateDate = STR_TO_DATE(InvoiceDate, '%d/%m/%Y %H:%i');

--==============================================================================
-- EXPORTACIÓN DE DATOS LIMPIOS
--==============================================================================

-- Exportar a CSV para análisis o visualización en herramientas externas
(SELECT 'InvoiceNo', 'StockCode', 'Description', 'Quantity', 'InvoiceDate', 'UnitPrice', 'CustomerID', 'Country')
UNION ALL
(SELECT
    InvoiceNo,
    StockCode,
    Description,
    Quantity,
    InvoiceDate,
    REPLACE(UnitPrice, ',', '.') AS UnitPrice,
    CustomerID,
    Country
FROM copia_online_retail)
INTO OUTFILE 'C:..../retail_clean.csv'
FIELDS TERMINATED BY ',' 
ENCLOSED BY '"' 
LINES TERMINATED BY '\n';
